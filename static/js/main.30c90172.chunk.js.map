{"version":3,"sources":["components/Footer/Footer.tsx","components/Map/DetailMap.tsx","components/OpenHours/OpenHours.tsx","lib/api/hospital.ts","components/HospitalList/HospitalDetail.tsx","components/PageNotFound.tsx","components/Skeleton/SkeletonCard.tsx","lib/api/pharmacy.ts","components/PharmacyList/PharmacyDetail.tsx","components/SidebarItem/SidebarItem.tsx","components/Button/Button.tsx","components/Sidebar/Sidebar.tsx","hooks/useDarkMode.ts","components/Map/Map.tsx","components/HospitalList/HospitalListItem.tsx","components/HospitalList/HospitalList.tsx","lib/constants.ts","modules/hospital/reducer.ts","components/SelectBox/SelectBox.tsx","pages/MedicalCheckPage.tsx","modules/pharmacy/reducer.ts","hooks/usePharmacy.ts","components/PharmacyList/PharmacyListItem.tsx","components/PharmacyList/PharmacyList.tsx","pages/PharmacyPage.tsx","theme/index.ts","theme/global-styles.ts","App.tsx","modules/position/position.ts","modules/pharmacy/saga.ts","modules/hospital/saga.ts","modules/index.ts","index.tsx"],"names":["Footer","FooterWrapper","FooterItem","target","href","rel","styled","div","props","theme","mode","mainBackground","textColor","DetailMap","xPos","yPos","useEffect","map","naver","maps","Map","center","LatLng","zoom","Marker","position","MapContainer","id","OpenHours","day","startTime","endTime","OpenHoursInfoWrap","substr","getHospitalListAPI","location","a","axios","get","siDoCd","siGunGuCd","response","data","getHospitalDetail","name","HospitalDetail","useParams","console","log","useState","setData","getData","HospitalDetailWrap","dutyName","dutyAddr","dutyMapimg","dutyTel1","Number","wgs84Lat","wgs84Lon","HospitalContents","dutyTime1s","dutyTime1c","dutyTime2s","dutyTime2c","dutyTime3s","dutyTime3c","dutyTime4s","dutyTime4c","dutyTime5s","dutyTime5c","dutyTime6s","dutyTime6c","PageNotFound","SkeletonCard","width","height","getPharmacyList","getPharmacyDetail","PharmacyDetail","PharmacyDetailWrap","PharmacyMap","PharmacyContents","SidebarItem","to","text","className","Text","span","Button","button","Sidebar","toggleTheme","StyleSideBar","Title","ToggleBtn","onClick","SidebarList","nav","ul","h1","useDarkMode","LocalTheme","localStorage","getItem","setTheme","setItem","hospitalList","pharmacyList","useSelector","hospital","cxVl","cyVl","pharmacy","latitude","longitude","HospitalListItem","hmcNm","HospitalWrapper","locAddr","HospitalList","state","hmcNo","SiDo","label","value","GunGu","createSlice","initialState","reducers","getHospitalList","action","getHospitalListSuccess","payload","reducer","actions","SelectBox","sidoCd","setSidoCd","gunguCd","setGunguCd","dispatch","useDispatch","SelectBoxWrapper","onChange","e","sido","gungu","MedicalCheckPage","getPharmacy","getPharmacySuccess","getPharmacyFailure","usePharmacy","PharmacyListItem","hpid","PharmacyWrapper","String","distance","PharmacyList","PharmacyPage","dark","light","GlobalStyle","createGlobalStyle","App","themeMode","path","exact","component","setPosition","getPharmacyDataSaga","pharmacySaga","call","put","type","takeEvery","getHospitalDataSaga","hospitalSaga","rootSaga","rootReducer","combineReducers","all","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","run","navigator","geolocation","getCurrentPosition","coords","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30c90172.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FooterWrapper>\r\n      <FooterItem>\r\n        <p>📧 Email:</p>\r\n        <p>yunyounghoon23@gmail.com</p>\r\n      </FooterItem>\r\n      <a\r\n        target=\"_blank\"\r\n        href=\"https://velog.io/@yoonyounghoon\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <FooterItem>\r\n          <p>📙 Blog:</p>\r\n          <p>https://velog.io/@yoonyounghoon</p>\r\n        </FooterItem>\r\n      </a>\r\n      <a\r\n        target=\"_blank\"\r\n        href=\"https://github.com/yoonyounghoon\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <FooterItem>\r\n          <p>📢:</p>\r\n          <p>https://github.com/yoonyounghoon</p>\r\n        </FooterItem>\r\n      </a>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\nconst FooterWrapper = styled.div`\r\n  width: 100%;\r\n  /* padding: 1rem; */\r\n  background-color: #f5f6fa;\r\n`;\r\n\r\nconst FooterItem = styled.div`\r\n  background: ${(props) => props.theme.mode.mainBackground};\r\n  color: ${(props) => props.theme.mode.textColor};\r\n  display: flex;\r\n  text-align: left;\r\n  padding: 1rem;\r\n  &:hover {\r\n    background-color: #3095e9;\r\n    color: white;\r\n  }\r\n  p {\r\n    margin-right: 8px;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype DetailMapProps = {\r\n  xPos: number;\r\n  yPos: number;\r\n};\r\n\r\nfunction DetailMap({ xPos, yPos }: DetailMapProps) {\r\n  useEffect(() => {\r\n    let map: any = null;\r\n    let marker = null;\r\n    const initMap = () => {\r\n      map = new naver.maps.Map('map', {\r\n        center: new naver.maps.LatLng(xPos, yPos),\r\n        zoom: 16,\r\n      });\r\n\r\n      // 현재 위치로 마커 생성\r\n      marker = new naver.maps.Marker({\r\n        position: new naver.maps.LatLng(xPos, yPos),\r\n        map: map,\r\n      });\r\n    };\r\n    initMap();\r\n  }, []);\r\n\r\n  return <MapContainer id=\"map\"></MapContainer>;\r\n}\r\n\r\nexport default DetailMap;\r\n\r\nconst MapContainer = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype OpenHoursInfoProps = {\r\n  startTime: string;\r\n  endTime: string;\r\n  day: string;\r\n};\r\n\r\nfunction OpenHours({ day, startTime, endTime }: OpenHoursInfoProps) {\r\n  return (\r\n    <OpenHoursInfoWrap>\r\n      <h4>{day}</h4>\r\n      <p>{`${startTime.substr(0, 2)}:${startTime.substr(2, 2)}~${endTime.substr(\r\n        0,\r\n        2,\r\n      )}:${endTime.substr(2, 2)}`}</p>\r\n    </OpenHoursInfoWrap>\r\n  );\r\n}\r\n\r\nexport default OpenHours;\r\n\r\nconst OpenHoursInfoWrap = styled.div`\r\n  color: ${(props) => props.theme.mode.textColor};\r\n  border-radius: 1rem;\r\n  padding: 1rem;\r\n  margin-bottom: 1rem;\r\n  height: 80px;\r\n\r\n  h4 {\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\n","import axios from 'axios';\r\n\r\nexport type locationCode = {\r\n  siDoCd: number;\r\n  siGunGuCd: number;\r\n};\r\n\r\n// 지역별 검진기관 API\r\nexport const getHospitalListAPI = async (location: locationCode) => {\r\n  const response = await axios.get(\r\n    `http://ec2-13-125-211-222.ap-northeast-2.compute.amazonaws.com:5000/hospital/${location.siDoCd}/${location.siGunGuCd}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// 병원별 자세한 정보\r\nexport const getHospitalDetail = async (name: string) => {\r\n  const response = await axios.get(`http://ec2-13-125-211-222.ap-northeast-2.compute.amazonaws.com:5000/hospital/${name}`);\r\n  return response.data;\r\n};\r\n","import DetailMap from 'components/Map/DetailMap';\r\nimport OpenHours from 'components/OpenHours';\r\nimport { getHospitalDetail } from 'lib/api/hospital';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { HospitalDetailInfo } from 'types';\r\n\r\ntype HospitalPrams = {\r\n  id: string;\r\n};\r\n\r\nfunction HospitalDetail() {\r\n  const { id } = useParams<HospitalPrams>();\r\n  console.log(id);\r\n  const [data, setData] = useState<null | HospitalDetailInfo>(null);\r\n\r\n  useEffect(() => {\r\n    console.log('effect');\r\n    const getData = async () => {\r\n      const response = await getHospitalDetail(id);\r\n      setData(response);\r\n      console.log(response);\r\n    };\r\n    getData();\r\n  }, [id]);\r\n\r\n  if (!data) {\r\n    return <p>로딩중..</p>;\r\n  }\r\n\r\n  return (\r\n    <HospitalDetailWrap>\r\n      <MapContainer>\r\n        <h2>{data.dutyName}</h2>\r\n        <h3>위치</h3>\r\n        <p>{data.dutyAddr}</p>\r\n        <p>{data.dutyMapimg}</p>\r\n        <p>전화번호: {data.dutyTel1}</p>\r\n        <DetailMap xPos={Number(data.wgs84Lat)} yPos={Number(data.wgs84Lon)} />\r\n      </MapContainer>\r\n      <HospitalContents>\r\n        <h3>영업 시간</h3>\r\n        <OpenHours\r\n          day=\"월요일\"\r\n          startTime={data.dutyTime1s}\r\n          endTime={data.dutyTime1c}\r\n        />\r\n        <OpenHours\r\n          day=\"화요일\"\r\n          startTime={data.dutyTime2s}\r\n          endTime={data.dutyTime2c}\r\n        />\r\n        <OpenHours\r\n          day=\"수요일\"\r\n          startTime={data.dutyTime3s}\r\n          endTime={data.dutyTime3c}\r\n        />\r\n        <OpenHours\r\n          day=\"목요일\"\r\n          startTime={data.dutyTime4s}\r\n          endTime={data.dutyTime4c}\r\n        />\r\n        <OpenHours\r\n          day=\"금요일\"\r\n          startTime={data.dutyTime5s}\r\n          endTime={data.dutyTime5c}\r\n        />\r\n        <OpenHours\r\n          day=\"토요일\"\r\n          startTime={data.dutyTime6s}\r\n          endTime={data.dutyTime6c}\r\n        />\r\n      </HospitalContents>\r\n    </HospitalDetailWrap>\r\n  );\r\n}\r\n\r\nexport default HospitalDetail;\r\n\r\nconst HospitalDetailWrap = styled.div``;\r\n\r\nconst MapContainer = styled.div`\r\n  color: ${(props) => props.theme.mode.textColor};\r\n  padding: 20px;\r\n  h2 {\r\n    margin-bottom: 1rem;\r\n  }\r\n  h3 {\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\n\r\nconst HospitalContents = styled.div`\r\n  color: ${(props) => props.theme.mode.textColor};\r\n  padding: 20px;\r\n  h3 {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <div>\r\n      <p>페이지를 찾을 수 없습니다!</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nfunction SkeletonCard() {\r\n  return (\r\n    <div>\r\n      <h4>\r\n        <Skeleton width={300} height={80} />\r\n      </h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkeletonCard;\r\n","import axios from 'axios';\r\n\r\nexport type PositionData = {\r\n  xPos: number;\r\n  yPos: number;\r\n};\r\n\r\n//  가까운 약국 10개 찾아오는 API\r\nexport const getPharmacyList = async (position: PositionData) => {\r\n  const response = await axios.get(\r\n    `http://ec2-13-125-211-222.ap-northeast-2.compute.amazonaws.com:5000/pharmacy/${position.yPos}/${position.xPos}`,\r\n  );\r\n  return response.data;\r\n};\r\n\r\n// 약국 자세한 정보 API\r\nexport const getPharmacyDetail = async (id: string) => {\r\n  const response = await axios.get(`http://ec2-13-125-211-222.ap-northeast-2.compute.amazonaws.com:5000/pharmacy/${id}`);\r\n  return response.data;\r\n};\r\n","import DetailMap from 'components/Map/DetailMap';\r\nimport OpenHours from 'components/OpenHours';\r\nimport SkeletonCard from 'components/Skeleton/SkeletonCard';\r\nimport { getPharmacyDetail } from 'lib/api/pharmacy';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { PharmacyDetailInfo } from 'types';\r\n\r\ntype Params = {\r\n  id: string;\r\n};\r\n\r\nfunction PharmacyDetail() {\r\n  const { id } = useParams<Params>();\r\n  const [data, setData] = useState<null | PharmacyDetailInfo>(null);\r\n\r\n  useEffect(() => {\r\n    console.log('effect');\r\n    const getData = async () => {\r\n      const response = await getPharmacyDetail(id);\r\n      setData(response);\r\n      console.log(response);\r\n    };\r\n    getData();\r\n  }, [id]);\r\n\r\n  if (!data) {\r\n    return (\r\n      <PharmacyDetailWrap>\r\n        <PharmacyMap>\r\n          <h2>\r\n            <Skeleton width={300} height={50} />\r\n          </h2>\r\n          <p>\r\n            <Skeleton width={150} height={10} />\r\n          </p>\r\n          <p>\r\n            <Skeleton width={150} height={10} />\r\n          </p>\r\n          <Skeleton height={300} />\r\n        </PharmacyMap>\r\n        <PharmacyContents>\r\n          <h3>영업 시간</h3>\r\n          <SkeletonCard />\r\n          <SkeletonCard />\r\n          <SkeletonCard />\r\n          <SkeletonCard />\r\n          <SkeletonCard />\r\n        </PharmacyContents>\r\n      </PharmacyDetailWrap>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PharmacyDetailWrap>\r\n      <PharmacyMap>\r\n        <h2>{data.dutyName}</h2>\r\n        <p>주소: {data.dutyAddr}</p>\r\n        <p>전화번호: {data.dutyTel1}</p>\r\n        <DetailMap xPos={Number(data.wgs84Lat)} yPos={Number(data.wgs84Lon)} />\r\n      </PharmacyMap>\r\n      <PharmacyContents>\r\n        <h3>영업 시간</h3>\r\n        <OpenHours\r\n          day=\"월요일\"\r\n          startTime={data.dutyTime1s}\r\n          endTime={data.dutyTime1c}\r\n        />\r\n        <OpenHours\r\n          day=\"화요일\"\r\n          startTime={data.dutyTime2s}\r\n          endTime={data.dutyTime2c}\r\n        />\r\n        <OpenHours\r\n          day=\"수요일\"\r\n          startTime={data.dutyTime3s}\r\n          endTime={data.dutyTime3c}\r\n        />\r\n        <OpenHours\r\n          day=\"목요일\"\r\n          startTime={data.dutyTime4s}\r\n          endTime={data.dutyTime4c}\r\n        />\r\n        <OpenHours\r\n          day=\"금요일\"\r\n          startTime={data.dutyTime5s}\r\n          endTime={data.dutyTime5c}\r\n        />\r\n        <OpenHours\r\n          day=\"토요일\"\r\n          startTime={data.dutyTime6s}\r\n          endTime={data.dutyTime6c}\r\n        />\r\n      </PharmacyContents>\r\n    </PharmacyDetailWrap>\r\n  );\r\n}\r\n\r\nexport default PharmacyDetail;\r\n\r\nconst PharmacyDetailWrap = styled.div``;\r\n\r\nconst PharmacyMap = styled.div`\r\n  color: ${(props) => props.theme.mode.textColor};\r\n  padding: 20px;\r\n  h2 {\r\n    margin-bottom: 1rem;\r\n  }\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\n\r\nconst PharmacyContents = styled.div`\r\n  color: ${(props) => props.theme.mode.textColor};\r\n  padding: 20px;\r\n  h3 {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\ntype SidebarItemProps = {\r\n  to: string;\r\n  text: string;\r\n};\r\n\r\nfunction SidebarItem({ to, text }: SidebarItemProps) {\r\n  return (\r\n    <NavLink to={to}>\r\n      <li className=\"item\">\r\n        <Text>{text}</Text>\r\n      </li>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default SidebarItem;\r\n\r\nconst Text = styled.span`\r\n  font-weight: bold;\r\n  color: ${(props) => props.theme.mode.textColor};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: #3095e9;\r\n  border: none;\r\n  color: white;\r\n  height: 100%;\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport SidebarItem from 'components/SidebarItem/SidebarItem';\r\nimport styled from 'styled-components';\r\nimport useDarkMode from 'hooks/useDarkMode';\r\nimport Button from 'components/Button';\r\n\r\ntype SidebarProps = {\r\n  toggleTheme: () => void;\r\n};\r\n\r\nfunction Sidebar({ toggleTheme }: SidebarProps) {\r\n  return (\r\n    <StyleSideBar>\r\n      <NavLink to=\"/\">\r\n        <Title>MEDICAL-HELPER</Title>\r\n      </NavLink>\r\n      <ToggleBtn onClick={toggleTheme}>다크모드</ToggleBtn>\r\n      <SidebarList>\r\n        <SidebarItem text=\"병원찾기\" to=\"/\" />\r\n        <SidebarItem text=\"약국찾기\" to=\"/pharmacy\" />\r\n      </SidebarList>\r\n    </StyleSideBar>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n\r\nconst StyleSideBar = styled.nav`\r\n  padding: 1rem;\r\n  padding-bottom: 0;\r\n`;\r\n\r\nconst SidebarList = styled.ul`\r\n  padding: 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  list-style: none;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${(props) => props.theme.mode.textColor};\r\n  text-align: center;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst ToggleBtn = styled(Button)`\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 16px;\r\n  width: 100px;\r\n  height: 30px;\r\n  border: 2px solid #dbdbdb;\r\n  font-weight: bold;\r\n  background: ${(props) => props.theme.mode.mainBackground};\r\n  color: ${(props) => props.theme.mode.textColor};\r\n`;\r\n","import React, { useState } from 'react';\r\n\r\nfunction useDarkMode(): [string, () => void] {\r\n  const LocalTheme = localStorage.getItem('theme') || 'light';\r\n  const [theme, setTheme] = useState(LocalTheme);\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === 'light') {\r\n      setTheme('dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      setTheme('light');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  };\r\n\r\n  return [theme, toggleTheme];\r\n}\r\n\r\nexport default useDarkMode;\r\n","import React from 'react';\r\nimport { RootState } from 'modules';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { HospitalInfo, PharmacyInfo } from 'types';\r\n\r\ntype MapProps = {\r\n  hospitalList?: HospitalInfo[];\r\n  pharmacyList?: PharmacyInfo[];\r\n  zoom: number;\r\n};\r\n\r\nfunction Map({ hospitalList, pharmacyList, zoom }: MapProps) {\r\n  const { xPos, yPos } = useSelector(({ position }: RootState) => position);\r\n\r\n  useEffect(() => {\r\n    let map: any = null;\r\n    let marker = null;\r\n\r\n    const initMap = () => {\r\n      map = new naver.maps.Map('map', {\r\n        center: new naver.maps.LatLng(xPos, yPos),\r\n        zoom: zoom,\r\n      });\r\n\r\n      // 현재 위치로 마커 생성\r\n      marker = new naver.maps.Marker({\r\n        position: new naver.maps.LatLng(xPos, yPos),\r\n        map: map,\r\n      });\r\n\r\n      if (hospitalList) {\r\n        hospitalList.map(\r\n          (hospital) =>\r\n            (marker = new naver.maps.Marker({\r\n              position: new naver.maps.LatLng(hospital.cxVl, hospital.cyVl),\r\n              map: map,\r\n            })),\r\n        );\r\n      }\r\n\r\n      if (pharmacyList) {\r\n        pharmacyList.map(\r\n          (pharmacy) =>\r\n            (marker = new naver.maps.Marker({\r\n              position: new naver.maps.LatLng(\r\n                pharmacy.latitude,\r\n                pharmacy.longitude,\r\n              ),\r\n              map: map,\r\n            })),\r\n        );\r\n      }\r\n    };\r\n\r\n    initMap();\r\n  }, [xPos, yPos, hospitalList, pharmacyList]);\r\n  return <MapContainer id=\"map\"></MapContainer>;\r\n}\r\n\r\nexport default Map;\r\n\r\nconst MapContainer = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n`;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { HospitalInfo } from 'types';\r\n\r\ntype HospitalListItemProps = {\r\n  data: HospitalInfo;\r\n};\r\n\r\nfunction HospitalListItem({ data }: HospitalListItemProps) {\r\n  return (\r\n    <NavLink to={`hospital/${data.hmcNm}`}>\r\n      <HospitalWrapper>\r\n        <h3>{data.hmcNm}</h3>\r\n        <p>주소 : {data.locAddr}</p>\r\n      </HospitalWrapper>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default HospitalListItem;\r\n\r\nconst HospitalWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 23px 20px;\r\n  h3 {\r\n    margin-bottom: 4px;\r\n  }\r\n  background: ${(props) => props.theme.mode.mainBackground};\r\n  color: ${(props) => props.theme.mode.textColor};\r\n`;\r\n","import { Map } from 'components/Map';\r\nimport { RootState } from 'modules';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport HospitalListItem from './HospitalListItem';\r\n\r\nfunction HospitalList() {\r\n  const { hospitalList } = useSelector((state: RootState) => state.hospital);\r\n\r\n  return (\r\n    <div>\r\n      {hospitalList && <Map hospitalList={hospitalList} zoom={10} />}\r\n      {hospitalList &&\r\n        hospitalList.map((data) => (\r\n          <HospitalListItem key={data.hmcNo} data={data} />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HospitalList;\r\n","export const SiDo = [\r\n  { label: '시,도를 선택해주세요', value: '0' },\r\n  { label: '서울시', value: '11' },\r\n];\r\n\r\nexport const GunGu = [\r\n  { label: '군,구를 선택해주세요', value: '0' },\r\n  { label: '종로구', value: '110' },\r\n  { label: '중구', value: '140' },\r\n  { label: '용산구', value: '170' },\r\n  { label: '성동구', value: '200' },\r\n  { label: '광진구', value: '215' },\r\n  { label: '동대문구', value: '230' },\r\n  { label: '중랑구', value: '260' },\r\n  { label: '성북구', value: '290 ' },\r\n  { label: '강북구', value: '305' },\r\n  { label: '도봉구', value: '320' },\r\n  { label: '노원구', value: '350' },\r\n  { label: '은평구', value: '380' },\r\n  { label: '서대문구', value: '410' },\r\n  { label: '마포구', value: '440' },\r\n  { label: '양천구', value: '470' },\r\n  { label: '강서구', value: '500' },\r\n  { label: '구로구', value: '530' },\r\n  { label: '금천구', value: '545' },\r\n  { label: '영등포구', value: '560' },\r\n  { label: '동작구', value: '590' },\r\n  { label: '관악구', value: '620' },\r\n  { label: '서초구', value: '650' },\r\n  { label: '강남구', value: '680' },\r\n  { label: '송파구', value: '710' },\r\n  { label: '강동구', value: '740' },\r\n];\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { locationCode } from 'lib/api/hospital';\r\nimport { HospitalInfo } from 'types';\r\n\r\nexport type hospitalState = {\r\n  hospitalList: [] | HospitalInfo[];\r\n};\r\n\r\nconst initialState: hospitalState = {\r\n  hospitalList: [],\r\n};\r\n\r\nconst hospital = createSlice({\r\n  name: 'hospitalReducer',\r\n  initialState,\r\n  reducers: {\r\n    getHospitalList: (state, action: PayloadAction<locationCode>) => ({\r\n      ...state,\r\n    }),\r\n    getHospitalListSuccess: (state, action: PayloadAction<HospitalInfo[]>) => ({\r\n      ...state,\r\n      hospitalList: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { reducer, actions } = hospital;\r\nexport const { getHospitalList, getHospitalListSuccess } = actions;\r\nexport default reducer;\r\n","import Button from 'components/Button';\r\nimport { GunGu, SiDo } from 'lib/constants';\r\nimport { getHospitalList } from 'modules/hospital/reducer';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nfunction SelectBox() {\r\n  const [sidoCd, setSidoCd] = useState('');\r\n  const [gunguCd, setGunguCd] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(\r\n      getHospitalList({ siDoCd: Number(sidoCd), siGunGuCd: Number(gunguCd) }),\r\n    );\r\n  };\r\n\r\n  const onChangeSido: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\r\n    setSidoCd(e.target.value);\r\n  };\r\n  const onChangeGunGu: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\r\n    setGunguCd(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <SelectBoxWrapper>\r\n      <select name=\"sidoCd\" value={sidoCd} onChange={onChangeSido}>\r\n        {SiDo.map((sido) => (\r\n          <option key={sido.value} value={sido.value}>\r\n            {sido.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <select name=\"gunguCd\" value={gunguCd} onChange={onChangeGunGu}>\r\n        {GunGu.map((gungu) => (\r\n          <option key={gungu.value} value={gungu.value}>\r\n            {gungu.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <Button onClick={handleSubmit}>조회하기</Button>\r\n    </SelectBoxWrapper>\r\n  );\r\n}\r\n\r\nexport default SelectBox;\r\n\r\nconst SelectBoxWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 2rem;\r\n  select {\r\n    height: 100%;\r\n  }\r\n  margin-bottom: 0.5rem;\r\n`;\r\n","import { HospitalList } from 'components/HospitalList';\r\nimport SelectBox from 'components/SelectBox';\r\nimport React from 'react';\r\n\r\nfunction MedicalCheckPage() {\r\n  return (\r\n    <div>\r\n      <SelectBox />\r\n      <HospitalList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MedicalCheckPage;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { PositionData } from 'lib/api/pharmacy';\r\nimport { PharmacyInfo } from 'types';\r\n\r\n// toolkit에서 제공하는 방식대로 reducer도 써주되 saga관련해서 Type을 조금 지정은 해야한다.\r\n// 만약 reducer에 들어가는 어떤 Payload가 아래의 형태라면 export 해서 saga 쪽에서 쓸 수 있게\r\n\r\n// 초기 상태 타입\r\nexport type pharmacyState = {\r\n  pharmacyList: [] | PharmacyInfo[];\r\n};\r\n\r\nconst initialState: pharmacyState = {\r\n  pharmacyList: [],\r\n};\r\n\r\nconst pharmacy = createSlice({\r\n  name: 'pharmacyReducer',\r\n  initialState,\r\n  reducers: {\r\n    getPharmacy: (\r\n      state: pharmacyState,\r\n      action: PayloadAction<PositionData>,\r\n    ) => ({\r\n      ...state,\r\n    }),\r\n    getPharmacySuccess: (\r\n      state: pharmacyState,\r\n      action: PayloadAction<PharmacyInfo[]>,\r\n    ) => ({\r\n      pharmacyList: action.payload,\r\n    }),\r\n    getPharmacyFailure: (state: pharmacyState, action) => ({\r\n      ...state,\r\n    }),\r\n  },\r\n});\r\n\r\n// 리듀서 && 액션 리턴\r\nconst { actions, reducer } = pharmacy;\r\nexport const { getPharmacy, getPharmacySuccess } = actions;\r\nexport default reducer;\r\n","import { RootState } from 'modules';\r\nimport { getPharmacy } from 'modules/pharmacy/reducer';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction usePharmacy() {\r\n  const { pharmacyList } = useSelector((state: RootState) => state.pharmacy);\r\n  const { xPos, yPos } = useSelector((state: RootState) => state.position);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPharmacy({ xPos, yPos }));\r\n  }, []);\r\n\r\n  return { pharmacyList, xPos, yPos };\r\n}\r\n\r\nexport default usePharmacy;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { PharmacyInfo } from 'types';\r\n\r\ntype PharmacyListItemProps = {\r\n  data: PharmacyInfo;\r\n};\r\n\r\nfunction PharmacyListItem({ data }: PharmacyListItemProps) {\r\n  const { startTime, endTime } = data;\r\n  return (\r\n    <NavLink to={`/pharmacy/${data.hpid}`}>\r\n      <PharmacyWrapper>\r\n        <h3>{data.dutyName}</h3>\r\n        <p>\r\n          🕒 진료시간 :{' '}\r\n          {`${startTime.substr(0, 2)}:${startTime.substr(2, 2)}~${String(\r\n            endTime,\r\n          ).substr(0, 2)}:${String(endTime).substr(2, 2)}`}\r\n        </p>\r\n        <span>현재위치에서의 거리: {data.distance * 1000}m</span>\r\n      </PharmacyWrapper>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default PharmacyListItem;\r\n\r\nconst PharmacyWrapper = styled.div`\r\n  background: ${(props) => props.theme.mode.mainBackground};\r\n  color: ${(props) => props.theme.mode.textColor};\r\n  width: 100%;\r\n  padding: 23px 20px;\r\n  h3 {\r\n    margin-bottom: 4px;\r\n  }\r\n  span {\r\n    font-size: 0.75rem;\r\n    color: #828896;\r\n  }\r\n`;\r\n","import { Map } from 'components/Map';\r\nimport usePharmacy from 'hooks/usePharmacy';\r\nimport React from 'react';\r\nimport PharmacyListItem from './PharmacyListItem';\r\n\r\nfunction PharmacyList() {\r\n  const { pharmacyList } = usePharmacy();\r\n\r\n  return (\r\n    <div>\r\n      {pharmacyList && <Map pharmacyList={pharmacyList} zoom={14} />}\r\n      {pharmacyList &&\r\n        pharmacyList.map((data) => (\r\n          <PharmacyListItem key={data.longitude} data={data} />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmacyList;\r\n","import { PharmacyList } from 'components/PharmacyList';\r\nimport React from 'react';\r\n\r\nfunction PharmacyPage() {\r\n  return (\r\n    <div>\r\n      <PharmacyList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PharmacyPage;\r\n","const dark = {\r\n  mainBackground: '#292B2E',\r\n  textColor: \"#fff\"\r\n};\r\n\r\nconst light = {\r\n  mainBackground: '#fff',\r\n  textColor: '#292B2E'\r\n};\r\n\r\nexport { dark, light };\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    *{\r\n       box-sizing: border-box;\r\n       font-family: 'Spoqa Han Sans Neo', 'sans-serif';\r\n    }\r\n    body {\r\n        margin: 0;\r\n        background: ${({ theme }: any) => theme.mode.mainBackground};\r\n    }\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4 {\r\n        margin: 0;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: #111723;\r\n    }\r\n\r\n    p {\r\n        margin: 0;\r\n    }\r\n`;\r\n","import Footer from 'components/Footer/Footer';\r\nimport HospitalDetail from 'components/HospitalList/HospitalDetail';\r\nimport PageNotFound from 'components/PageNotFound';\r\nimport PharmacyDetail from 'components/PharmacyList/PharmacyDetail';\r\nimport Sidebar from 'components/Sidebar';\r\nimport useDarkMode from 'hooks/useDarkMode';\r\nimport MedicalCheckPage from 'pages/MedicalCheckPage';\r\nimport PharmacyPage from 'pages/PharmacyPage';\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { dark, light } from 'theme';\r\nimport { GlobalStyle } from 'theme/global-styles';\r\n\r\nfunction App() {\r\n  const [themeMode, toggleTheme] = useDarkMode();\r\n  const theme = themeMode === 'light' ? { mode: light } : { mode: dark };\r\n\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyle />\r\n        <Sidebar toggleTheme={toggleTheme} />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MedicalCheckPage} />\r\n          <Route path=\"/hospital/:id\" exact component={HospitalDetail} />\r\n          <Route path=\"/pharmacy\" exact component={PharmacyPage} />\r\n          <Route path=\"/pharmacy/:id\" component={PharmacyDetail} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n        <Footer />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  xPos: 0,\r\n  yPos: 0,\r\n};\r\n\r\nconst position = createSlice({\r\n  name: 'positionReducer',\r\n  initialState,\r\n  reducers: {\r\n    setPosition: (state, action) => ({\r\n      ...state,\r\n      xPos: action.payload.xPos,\r\n      yPos: action.payload.yPos,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const { setPosition } = position.actions;\r\n\r\nexport default position;\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { getPharmacyList, PositionData } from 'lib/api/pharmacy';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { getPharmacy, getPharmacySuccess } from './reducer';\r\n\r\n// saga 코드\r\nfunction* getPharmacyDataSaga(action: PayloadAction<PositionData>): Generator {\r\n  const { xPos, yPos } = action.payload;\r\n\r\n  try {\r\n    const response = yield call(getPharmacyList, { xPos, yPos });\r\n\r\n    yield put({\r\n      type: getPharmacySuccess.type,\r\n      payload: response,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport default function* pharmacySaga() {\r\n  yield takeEvery(getPharmacy.type, getPharmacyDataSaga);\r\n}\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { getHospitalListAPI, locationCode } from 'lib/api/hospital';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { getHospitalList, getHospitalListSuccess } from './reducer';\r\n\r\n// saga 코드\r\nfunction* getHospitalDataSaga(action: PayloadAction<locationCode>): Generator {\r\n  const { siDoCd, siGunGuCd } = action.payload;\r\n\r\n  try {\r\n    const response = yield call(getHospitalListAPI, { siDoCd, siGunGuCd });\r\n    console.log(response);\r\n    yield put({\r\n      type: getHospitalListSuccess.type,\r\n      payload: response,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport default function* hospitalSaga() {\r\n  yield takeEvery(getHospitalList.type, getHospitalDataSaga);\r\n}\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport position from './position/position';\r\nimport { all } from '@redux-saga/core/effects';\r\nimport { pharmacy, pharmacySaga } from './pharmacy';\r\nimport { hospital, hospitalSaga } from './hospital';\r\n\r\n// 루트 리듀서\r\nexport const rootReducer = combineReducers({\r\n  position: position.reducer,\r\n  hospital,\r\n  pharmacy,\r\n});\r\n\r\n// 루트 사가\r\nexport function* rootSaga() {\r\n  yield all([hospitalSaga(), pharmacySaga()]);\r\n}\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { rootSaga, rootReducer } from 'modules';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Provider } from 'react-redux';\r\nimport { setPosition } from 'modules/position';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nif (navigator.geolocation) {\r\n  navigator.geolocation.getCurrentPosition(\r\n    (position) => {\r\n      store.dispatch(\r\n        setPosition({\r\n          xPos: position.coords.latitude,\r\n          yPos: position.coords.longitude,\r\n        }),\r\n      );\r\n    },\r\n    (e) => console.log('현재 위치를 가져오지 못했습니다.', e),\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}